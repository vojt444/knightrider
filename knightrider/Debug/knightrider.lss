
knightrider.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000412  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000466  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000466  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000498  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000004d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000652  00000000  00000000  00000504  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000059d  00000000  00000000  00000b56  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000304  00000000  00000000  000010f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  000013f8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000032d  00000000  00000000  0000143c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000c1  00000000  00000000  00001769  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  0000182a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	15 d0       	rcall	.+42     	; 0x5e <main>
  34:	ec c1       	rjmp	.+984    	; 0x40e <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <delay_ms>:
    }
}

void delay_ms(unsigned int time)
{
	while(time>0)
  38:	07 c0       	rjmp	.+14     	; 0x48 <__SREG__+0x9>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  3a:	e9 ef       	ldi	r30, 0xF9	; 249
  3c:	f0 e0       	ldi	r31, 0x00	; 0
  3e:	31 97       	sbiw	r30, 0x01	; 1
  40:	f1 f7       	brne	.-4      	; 0x3e <__SP_H__>
  42:	00 c0       	rjmp	.+0      	; 0x44 <__SREG__+0x5>
  44:	00 00       	nop
	{
		_delay_ms(1);
		--time;
  46:	01 97       	sbiw	r24, 0x01	; 1
    }
}

void delay_ms(unsigned int time)
{
	while(time>0)
  48:	00 97       	sbiw	r24, 0x00	; 0
  4a:	b9 f7       	brne	.-18     	; 0x3a <delay_ms+0x2>
	{
		_delay_ms(1);
		--time;
	}
}
  4c:	08 95       	ret

0000004e <adc_read>:

uint16_t adc_read()
{
	ADCSRA |= (1<<ADSC);
  4e:	86 b1       	in	r24, 0x06	; 6
  50:	80 64       	ori	r24, 0x40	; 64
  52:	86 b9       	out	0x06, r24	; 6
	
	while(ADCSRA & (1<<ADSC));
  54:	36 99       	sbic	0x06, 6	; 6
  56:	fe cf       	rjmp	.-4      	; 0x54 <adc_read+0x6>
	
	return ADC;	
  58:	84 b1       	in	r24, 0x04	; 4
  5a:	95 b1       	in	r25, 0x05	; 5
}
  5c:	08 95       	ret

0000005e <main>:
int main(void)
{
	uint16_t adc_val = 0;
	uint16_t delay_val = 0;
	
    DDRD = 0xFF;
  5e:	8f ef       	ldi	r24, 0xFF	; 255
  60:	81 bb       	out	0x11, r24	; 17
	
	ADMUX = (1<<REFS0) | (1<<MUX2) | (1<<MUX0);
  62:	85 e4       	ldi	r24, 0x45	; 69
  64:	87 b9       	out	0x07, r24	; 7
	//ADMUX = 0x45;
	ADCSRA |= (1<<ADEN);
  66:	86 b1       	in	r24, 0x06	; 6
  68:	80 68       	ori	r24, 0x80	; 128
  6a:	86 b9       	out	0x06, r24	; 6
	ADCSRA = 0x80;
  6c:	80 e8       	ldi	r24, 0x80	; 128
  6e:	86 b9       	out	0x06, r24	; 6
	
    while (1) 
    {
		for(uint8_t i = 0; i < 7; ++i)
  70:	10 e0       	ldi	r17, 0x00	; 0
  72:	22 c0       	rjmp	.+68     	; 0xb8 <main+0x5a>
		{
			adc_val = (0.47 * adc_read() + 20);
  74:	ec df       	rcall	.-40     	; 0x4e <adc_read>
  76:	bc 01       	movw	r22, r24
  78:	80 e0       	ldi	r24, 0x00	; 0
  7a:	90 e0       	ldi	r25, 0x00	; 0
  7c:	d7 d0       	rcall	.+430    	; 0x22c <__floatunsisf>
  7e:	27 ed       	ldi	r18, 0xD7	; 215
  80:	33 ea       	ldi	r19, 0xA3	; 163
  82:	40 ef       	ldi	r20, 0xF0	; 240
  84:	5e e3       	ldi	r21, 0x3E	; 62
  86:	60 d1       	rcall	.+704    	; 0x348 <__mulsf3>
  88:	20 e0       	ldi	r18, 0x00	; 0
  8a:	30 e0       	ldi	r19, 0x00	; 0
  8c:	40 ea       	ldi	r20, 0xA0	; 160
  8e:	51 e4       	ldi	r21, 0x41	; 65
  90:	3d d0       	rcall	.+122    	; 0x10c <__addsf3>
  92:	a0 d0       	rcall	.+320    	; 0x1d4 <__fixunssfsi>
						
			HighBit(PORTD, i);
  94:	22 b3       	in	r18, 0x12	; 18
  96:	c1 e0       	ldi	r28, 0x01	; 1
  98:	d0 e0       	ldi	r29, 0x00	; 0
  9a:	01 2e       	mov	r0, r17
  9c:	02 c0       	rjmp	.+4      	; 0xa2 <main+0x44>
  9e:	cc 0f       	add	r28, r28
  a0:	dd 1f       	adc	r29, r29
  a2:	0a 94       	dec	r0
  a4:	e2 f7       	brpl	.-8      	; 0x9e <main+0x40>
  a6:	2c 2b       	or	r18, r28
  a8:	22 bb       	out	0x12, r18	; 18
			delay_ms(adc_val);
  aa:	cb 01       	movw	r24, r22
  ac:	c5 df       	rcall	.-118    	; 0x38 <delay_ms>
			LowBit(PORTD, i);
  ae:	82 b3       	in	r24, 0x12	; 18
  b0:	c0 95       	com	r28
  b2:	c8 23       	and	r28, r24
  b4:	c2 bb       	out	0x12, r28	; 18
	ADCSRA |= (1<<ADEN);
	ADCSRA = 0x80;
	
    while (1) 
    {
		for(uint8_t i = 0; i < 7; ++i)
  b6:	1f 5f       	subi	r17, 0xFF	; 255
  b8:	17 30       	cpi	r17, 0x07	; 7
  ba:	e0 f2       	brcs	.-72     	; 0x74 <main+0x16>
  bc:	17 e0       	ldi	r17, 0x07	; 7
  be:	22 c0       	rjmp	.+68     	; 0x104 <main+0xa6>
			delay_ms(adc_val);
			LowBit(PORTD, i);
		}
		for(uint8_t i = 7; i > 0; --i)
		{
			adc_val = (0.47 * adc_read() + 20);
  c0:	c6 df       	rcall	.-116    	; 0x4e <adc_read>
  c2:	bc 01       	movw	r22, r24
  c4:	80 e0       	ldi	r24, 0x00	; 0
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	b1 d0       	rcall	.+354    	; 0x22c <__floatunsisf>
  ca:	27 ed       	ldi	r18, 0xD7	; 215
  cc:	33 ea       	ldi	r19, 0xA3	; 163
  ce:	40 ef       	ldi	r20, 0xF0	; 240
  d0:	5e e3       	ldi	r21, 0x3E	; 62
  d2:	3a d1       	rcall	.+628    	; 0x348 <__mulsf3>
  d4:	20 e0       	ldi	r18, 0x00	; 0
  d6:	30 e0       	ldi	r19, 0x00	; 0
  d8:	40 ea       	ldi	r20, 0xA0	; 160
  da:	51 e4       	ldi	r21, 0x41	; 65
  dc:	17 d0       	rcall	.+46     	; 0x10c <__addsf3>
  de:	7a d0       	rcall	.+244    	; 0x1d4 <__fixunssfsi>
							
			HighBit(PORTD, i);
  e0:	22 b3       	in	r18, 0x12	; 18
  e2:	c1 e0       	ldi	r28, 0x01	; 1
  e4:	d0 e0       	ldi	r29, 0x00	; 0
  e6:	01 2e       	mov	r0, r17
  e8:	02 c0       	rjmp	.+4      	; 0xee <main+0x90>
  ea:	cc 0f       	add	r28, r28
  ec:	dd 1f       	adc	r29, r29
  ee:	0a 94       	dec	r0
  f0:	e2 f7       	brpl	.-8      	; 0xea <main+0x8c>
  f2:	2c 2b       	or	r18, r28
  f4:	22 bb       	out	0x12, r18	; 18
			delay_ms(adc_val);
  f6:	cb 01       	movw	r24, r22
  f8:	9f df       	rcall	.-194    	; 0x38 <delay_ms>
			LowBit(PORTD, i);
  fa:	82 b3       	in	r24, 0x12	; 18
  fc:	c0 95       	com	r28
  fe:	c8 23       	and	r28, r24
 100:	c2 bb       	out	0x12, r28	; 18
						
			HighBit(PORTD, i);
			delay_ms(adc_val);
			LowBit(PORTD, i);
		}
		for(uint8_t i = 7; i > 0; --i)
 102:	11 50       	subi	r17, 0x01	; 1
 104:	11 11       	cpse	r17, r1
 106:	dc cf       	rjmp	.-72     	; 0xc0 <main+0x62>
 108:	b3 cf       	rjmp	.-154    	; 0x70 <main+0x12>

0000010a <__subsf3>:
 10a:	50 58       	subi	r21, 0x80	; 128

0000010c <__addsf3>:
 10c:	bb 27       	eor	r27, r27
 10e:	aa 27       	eor	r26, r26
 110:	0e d0       	rcall	.+28     	; 0x12e <__addsf3x>
 112:	e0 c0       	rjmp	.+448    	; 0x2d4 <__fp_round>
 114:	d1 d0       	rcall	.+418    	; 0x2b8 <__fp_pscA>
 116:	30 f0       	brcs	.+12     	; 0x124 <__addsf3+0x18>
 118:	d6 d0       	rcall	.+428    	; 0x2c6 <__fp_pscB>
 11a:	20 f0       	brcs	.+8      	; 0x124 <__addsf3+0x18>
 11c:	31 f4       	brne	.+12     	; 0x12a <__addsf3+0x1e>
 11e:	9f 3f       	cpi	r25, 0xFF	; 255
 120:	11 f4       	brne	.+4      	; 0x126 <__addsf3+0x1a>
 122:	1e f4       	brtc	.+6      	; 0x12a <__addsf3+0x1e>
 124:	c6 c0       	rjmp	.+396    	; 0x2b2 <__fp_nan>
 126:	0e f4       	brtc	.+2      	; 0x12a <__addsf3+0x1e>
 128:	e0 95       	com	r30
 12a:	e7 fb       	bst	r30, 7
 12c:	bc c0       	rjmp	.+376    	; 0x2a6 <__fp_inf>

0000012e <__addsf3x>:
 12e:	e9 2f       	mov	r30, r25
 130:	e2 d0       	rcall	.+452    	; 0x2f6 <__fp_split3>
 132:	80 f3       	brcs	.-32     	; 0x114 <__addsf3+0x8>
 134:	ba 17       	cp	r27, r26
 136:	62 07       	cpc	r22, r18
 138:	73 07       	cpc	r23, r19
 13a:	84 07       	cpc	r24, r20
 13c:	95 07       	cpc	r25, r21
 13e:	18 f0       	brcs	.+6      	; 0x146 <__addsf3x+0x18>
 140:	71 f4       	brne	.+28     	; 0x15e <__addsf3x+0x30>
 142:	9e f5       	brtc	.+102    	; 0x1aa <__addsf3x+0x7c>
 144:	fa c0       	rjmp	.+500    	; 0x33a <__fp_zero>
 146:	0e f4       	brtc	.+2      	; 0x14a <__addsf3x+0x1c>
 148:	e0 95       	com	r30
 14a:	0b 2e       	mov	r0, r27
 14c:	ba 2f       	mov	r27, r26
 14e:	a0 2d       	mov	r26, r0
 150:	0b 01       	movw	r0, r22
 152:	b9 01       	movw	r22, r18
 154:	90 01       	movw	r18, r0
 156:	0c 01       	movw	r0, r24
 158:	ca 01       	movw	r24, r20
 15a:	a0 01       	movw	r20, r0
 15c:	11 24       	eor	r1, r1
 15e:	ff 27       	eor	r31, r31
 160:	59 1b       	sub	r21, r25
 162:	99 f0       	breq	.+38     	; 0x18a <__addsf3x+0x5c>
 164:	59 3f       	cpi	r21, 0xF9	; 249
 166:	50 f4       	brcc	.+20     	; 0x17c <__addsf3x+0x4e>
 168:	50 3e       	cpi	r21, 0xE0	; 224
 16a:	68 f1       	brcs	.+90     	; 0x1c6 <__addsf3x+0x98>
 16c:	1a 16       	cp	r1, r26
 16e:	f0 40       	sbci	r31, 0x00	; 0
 170:	a2 2f       	mov	r26, r18
 172:	23 2f       	mov	r18, r19
 174:	34 2f       	mov	r19, r20
 176:	44 27       	eor	r20, r20
 178:	58 5f       	subi	r21, 0xF8	; 248
 17a:	f3 cf       	rjmp	.-26     	; 0x162 <__addsf3x+0x34>
 17c:	46 95       	lsr	r20
 17e:	37 95       	ror	r19
 180:	27 95       	ror	r18
 182:	a7 95       	ror	r26
 184:	f0 40       	sbci	r31, 0x00	; 0
 186:	53 95       	inc	r21
 188:	c9 f7       	brne	.-14     	; 0x17c <__addsf3x+0x4e>
 18a:	7e f4       	brtc	.+30     	; 0x1aa <__addsf3x+0x7c>
 18c:	1f 16       	cp	r1, r31
 18e:	ba 0b       	sbc	r27, r26
 190:	62 0b       	sbc	r22, r18
 192:	73 0b       	sbc	r23, r19
 194:	84 0b       	sbc	r24, r20
 196:	ba f0       	brmi	.+46     	; 0x1c6 <__addsf3x+0x98>
 198:	91 50       	subi	r25, 0x01	; 1
 19a:	a1 f0       	breq	.+40     	; 0x1c4 <__addsf3x+0x96>
 19c:	ff 0f       	add	r31, r31
 19e:	bb 1f       	adc	r27, r27
 1a0:	66 1f       	adc	r22, r22
 1a2:	77 1f       	adc	r23, r23
 1a4:	88 1f       	adc	r24, r24
 1a6:	c2 f7       	brpl	.-16     	; 0x198 <__addsf3x+0x6a>
 1a8:	0e c0       	rjmp	.+28     	; 0x1c6 <__addsf3x+0x98>
 1aa:	ba 0f       	add	r27, r26
 1ac:	62 1f       	adc	r22, r18
 1ae:	73 1f       	adc	r23, r19
 1b0:	84 1f       	adc	r24, r20
 1b2:	48 f4       	brcc	.+18     	; 0x1c6 <__addsf3x+0x98>
 1b4:	87 95       	ror	r24
 1b6:	77 95       	ror	r23
 1b8:	67 95       	ror	r22
 1ba:	b7 95       	ror	r27
 1bc:	f7 95       	ror	r31
 1be:	9e 3f       	cpi	r25, 0xFE	; 254
 1c0:	08 f0       	brcs	.+2      	; 0x1c4 <__addsf3x+0x96>
 1c2:	b3 cf       	rjmp	.-154    	; 0x12a <__addsf3+0x1e>
 1c4:	93 95       	inc	r25
 1c6:	88 0f       	add	r24, r24
 1c8:	08 f0       	brcs	.+2      	; 0x1cc <__addsf3x+0x9e>
 1ca:	99 27       	eor	r25, r25
 1cc:	ee 0f       	add	r30, r30
 1ce:	97 95       	ror	r25
 1d0:	87 95       	ror	r24
 1d2:	08 95       	ret

000001d4 <__fixunssfsi>:
 1d4:	98 d0       	rcall	.+304    	; 0x306 <__fp_splitA>
 1d6:	88 f0       	brcs	.+34     	; 0x1fa <__fixunssfsi+0x26>
 1d8:	9f 57       	subi	r25, 0x7F	; 127
 1da:	90 f0       	brcs	.+36     	; 0x200 <__EEPROM_REGION_LENGTH__>
 1dc:	b9 2f       	mov	r27, r25
 1de:	99 27       	eor	r25, r25
 1e0:	b7 51       	subi	r27, 0x17	; 23
 1e2:	a0 f0       	brcs	.+40     	; 0x20c <__EEPROM_REGION_LENGTH__+0xc>
 1e4:	d1 f0       	breq	.+52     	; 0x21a <__EEPROM_REGION_LENGTH__+0x1a>
 1e6:	66 0f       	add	r22, r22
 1e8:	77 1f       	adc	r23, r23
 1ea:	88 1f       	adc	r24, r24
 1ec:	99 1f       	adc	r25, r25
 1ee:	1a f0       	brmi	.+6      	; 0x1f6 <__fixunssfsi+0x22>
 1f0:	ba 95       	dec	r27
 1f2:	c9 f7       	brne	.-14     	; 0x1e6 <__fixunssfsi+0x12>
 1f4:	12 c0       	rjmp	.+36     	; 0x21a <__EEPROM_REGION_LENGTH__+0x1a>
 1f6:	b1 30       	cpi	r27, 0x01	; 1
 1f8:	81 f0       	breq	.+32     	; 0x21a <__EEPROM_REGION_LENGTH__+0x1a>
 1fa:	9f d0       	rcall	.+318    	; 0x33a <__fp_zero>
 1fc:	b1 e0       	ldi	r27, 0x01	; 1
 1fe:	08 95       	ret
 200:	9c c0       	rjmp	.+312    	; 0x33a <__fp_zero>
 202:	67 2f       	mov	r22, r23
 204:	78 2f       	mov	r23, r24
 206:	88 27       	eor	r24, r24
 208:	b8 5f       	subi	r27, 0xF8	; 248
 20a:	39 f0       	breq	.+14     	; 0x21a <__EEPROM_REGION_LENGTH__+0x1a>
 20c:	b9 3f       	cpi	r27, 0xF9	; 249
 20e:	cc f3       	brlt	.-14     	; 0x202 <__EEPROM_REGION_LENGTH__+0x2>
 210:	86 95       	lsr	r24
 212:	77 95       	ror	r23
 214:	67 95       	ror	r22
 216:	b3 95       	inc	r27
 218:	d9 f7       	brne	.-10     	; 0x210 <__EEPROM_REGION_LENGTH__+0x10>
 21a:	3e f4       	brtc	.+14     	; 0x22a <__EEPROM_REGION_LENGTH__+0x2a>
 21c:	90 95       	com	r25
 21e:	80 95       	com	r24
 220:	70 95       	com	r23
 222:	61 95       	neg	r22
 224:	7f 4f       	sbci	r23, 0xFF	; 255
 226:	8f 4f       	sbci	r24, 0xFF	; 255
 228:	9f 4f       	sbci	r25, 0xFF	; 255
 22a:	08 95       	ret

0000022c <__floatunsisf>:
 22c:	e8 94       	clt
 22e:	09 c0       	rjmp	.+18     	; 0x242 <__floatsisf+0x12>

00000230 <__floatsisf>:
 230:	97 fb       	bst	r25, 7
 232:	3e f4       	brtc	.+14     	; 0x242 <__floatsisf+0x12>
 234:	90 95       	com	r25
 236:	80 95       	com	r24
 238:	70 95       	com	r23
 23a:	61 95       	neg	r22
 23c:	7f 4f       	sbci	r23, 0xFF	; 255
 23e:	8f 4f       	sbci	r24, 0xFF	; 255
 240:	9f 4f       	sbci	r25, 0xFF	; 255
 242:	99 23       	and	r25, r25
 244:	a9 f0       	breq	.+42     	; 0x270 <__floatsisf+0x40>
 246:	f9 2f       	mov	r31, r25
 248:	96 e9       	ldi	r25, 0x96	; 150
 24a:	bb 27       	eor	r27, r27
 24c:	93 95       	inc	r25
 24e:	f6 95       	lsr	r31
 250:	87 95       	ror	r24
 252:	77 95       	ror	r23
 254:	67 95       	ror	r22
 256:	b7 95       	ror	r27
 258:	f1 11       	cpse	r31, r1
 25a:	f8 cf       	rjmp	.-16     	; 0x24c <__floatsisf+0x1c>
 25c:	fa f4       	brpl	.+62     	; 0x29c <__floatsisf+0x6c>
 25e:	bb 0f       	add	r27, r27
 260:	11 f4       	brne	.+4      	; 0x266 <__floatsisf+0x36>
 262:	60 ff       	sbrs	r22, 0
 264:	1b c0       	rjmp	.+54     	; 0x29c <__floatsisf+0x6c>
 266:	6f 5f       	subi	r22, 0xFF	; 255
 268:	7f 4f       	sbci	r23, 0xFF	; 255
 26a:	8f 4f       	sbci	r24, 0xFF	; 255
 26c:	9f 4f       	sbci	r25, 0xFF	; 255
 26e:	16 c0       	rjmp	.+44     	; 0x29c <__floatsisf+0x6c>
 270:	88 23       	and	r24, r24
 272:	11 f0       	breq	.+4      	; 0x278 <__floatsisf+0x48>
 274:	96 e9       	ldi	r25, 0x96	; 150
 276:	11 c0       	rjmp	.+34     	; 0x29a <__floatsisf+0x6a>
 278:	77 23       	and	r23, r23
 27a:	21 f0       	breq	.+8      	; 0x284 <__floatsisf+0x54>
 27c:	9e e8       	ldi	r25, 0x8E	; 142
 27e:	87 2f       	mov	r24, r23
 280:	76 2f       	mov	r23, r22
 282:	05 c0       	rjmp	.+10     	; 0x28e <__floatsisf+0x5e>
 284:	66 23       	and	r22, r22
 286:	71 f0       	breq	.+28     	; 0x2a4 <__floatsisf+0x74>
 288:	96 e8       	ldi	r25, 0x86	; 134
 28a:	86 2f       	mov	r24, r22
 28c:	70 e0       	ldi	r23, 0x00	; 0
 28e:	60 e0       	ldi	r22, 0x00	; 0
 290:	2a f0       	brmi	.+10     	; 0x29c <__floatsisf+0x6c>
 292:	9a 95       	dec	r25
 294:	66 0f       	add	r22, r22
 296:	77 1f       	adc	r23, r23
 298:	88 1f       	adc	r24, r24
 29a:	da f7       	brpl	.-10     	; 0x292 <__floatsisf+0x62>
 29c:	88 0f       	add	r24, r24
 29e:	96 95       	lsr	r25
 2a0:	87 95       	ror	r24
 2a2:	97 f9       	bld	r25, 7
 2a4:	08 95       	ret

000002a6 <__fp_inf>:
 2a6:	97 f9       	bld	r25, 7
 2a8:	9f 67       	ori	r25, 0x7F	; 127
 2aa:	80 e8       	ldi	r24, 0x80	; 128
 2ac:	70 e0       	ldi	r23, 0x00	; 0
 2ae:	60 e0       	ldi	r22, 0x00	; 0
 2b0:	08 95       	ret

000002b2 <__fp_nan>:
 2b2:	9f ef       	ldi	r25, 0xFF	; 255
 2b4:	80 ec       	ldi	r24, 0xC0	; 192
 2b6:	08 95       	ret

000002b8 <__fp_pscA>:
 2b8:	00 24       	eor	r0, r0
 2ba:	0a 94       	dec	r0
 2bc:	16 16       	cp	r1, r22
 2be:	17 06       	cpc	r1, r23
 2c0:	18 06       	cpc	r1, r24
 2c2:	09 06       	cpc	r0, r25
 2c4:	08 95       	ret

000002c6 <__fp_pscB>:
 2c6:	00 24       	eor	r0, r0
 2c8:	0a 94       	dec	r0
 2ca:	12 16       	cp	r1, r18
 2cc:	13 06       	cpc	r1, r19
 2ce:	14 06       	cpc	r1, r20
 2d0:	05 06       	cpc	r0, r21
 2d2:	08 95       	ret

000002d4 <__fp_round>:
 2d4:	09 2e       	mov	r0, r25
 2d6:	03 94       	inc	r0
 2d8:	00 0c       	add	r0, r0
 2da:	11 f4       	brne	.+4      	; 0x2e0 <__fp_round+0xc>
 2dc:	88 23       	and	r24, r24
 2de:	52 f0       	brmi	.+20     	; 0x2f4 <__fp_round+0x20>
 2e0:	bb 0f       	add	r27, r27
 2e2:	40 f4       	brcc	.+16     	; 0x2f4 <__fp_round+0x20>
 2e4:	bf 2b       	or	r27, r31
 2e6:	11 f4       	brne	.+4      	; 0x2ec <__fp_round+0x18>
 2e8:	60 ff       	sbrs	r22, 0
 2ea:	04 c0       	rjmp	.+8      	; 0x2f4 <__fp_round+0x20>
 2ec:	6f 5f       	subi	r22, 0xFF	; 255
 2ee:	7f 4f       	sbci	r23, 0xFF	; 255
 2f0:	8f 4f       	sbci	r24, 0xFF	; 255
 2f2:	9f 4f       	sbci	r25, 0xFF	; 255
 2f4:	08 95       	ret

000002f6 <__fp_split3>:
 2f6:	57 fd       	sbrc	r21, 7
 2f8:	90 58       	subi	r25, 0x80	; 128
 2fa:	44 0f       	add	r20, r20
 2fc:	55 1f       	adc	r21, r21
 2fe:	59 f0       	breq	.+22     	; 0x316 <__fp_splitA+0x10>
 300:	5f 3f       	cpi	r21, 0xFF	; 255
 302:	71 f0       	breq	.+28     	; 0x320 <__fp_splitA+0x1a>
 304:	47 95       	ror	r20

00000306 <__fp_splitA>:
 306:	88 0f       	add	r24, r24
 308:	97 fb       	bst	r25, 7
 30a:	99 1f       	adc	r25, r25
 30c:	61 f0       	breq	.+24     	; 0x326 <__fp_splitA+0x20>
 30e:	9f 3f       	cpi	r25, 0xFF	; 255
 310:	79 f0       	breq	.+30     	; 0x330 <__fp_splitA+0x2a>
 312:	87 95       	ror	r24
 314:	08 95       	ret
 316:	12 16       	cp	r1, r18
 318:	13 06       	cpc	r1, r19
 31a:	14 06       	cpc	r1, r20
 31c:	55 1f       	adc	r21, r21
 31e:	f2 cf       	rjmp	.-28     	; 0x304 <__fp_split3+0xe>
 320:	46 95       	lsr	r20
 322:	f1 df       	rcall	.-30     	; 0x306 <__fp_splitA>
 324:	08 c0       	rjmp	.+16     	; 0x336 <__fp_splitA+0x30>
 326:	16 16       	cp	r1, r22
 328:	17 06       	cpc	r1, r23
 32a:	18 06       	cpc	r1, r24
 32c:	99 1f       	adc	r25, r25
 32e:	f1 cf       	rjmp	.-30     	; 0x312 <__fp_splitA+0xc>
 330:	86 95       	lsr	r24
 332:	71 05       	cpc	r23, r1
 334:	61 05       	cpc	r22, r1
 336:	08 94       	sec
 338:	08 95       	ret

0000033a <__fp_zero>:
 33a:	e8 94       	clt

0000033c <__fp_szero>:
 33c:	bb 27       	eor	r27, r27
 33e:	66 27       	eor	r22, r22
 340:	77 27       	eor	r23, r23
 342:	cb 01       	movw	r24, r22
 344:	97 f9       	bld	r25, 7
 346:	08 95       	ret

00000348 <__mulsf3>:
 348:	0b d0       	rcall	.+22     	; 0x360 <__mulsf3x>
 34a:	c4 cf       	rjmp	.-120    	; 0x2d4 <__fp_round>
 34c:	b5 df       	rcall	.-150    	; 0x2b8 <__fp_pscA>
 34e:	28 f0       	brcs	.+10     	; 0x35a <__mulsf3+0x12>
 350:	ba df       	rcall	.-140    	; 0x2c6 <__fp_pscB>
 352:	18 f0       	brcs	.+6      	; 0x35a <__mulsf3+0x12>
 354:	95 23       	and	r25, r21
 356:	09 f0       	breq	.+2      	; 0x35a <__mulsf3+0x12>
 358:	a6 cf       	rjmp	.-180    	; 0x2a6 <__fp_inf>
 35a:	ab cf       	rjmp	.-170    	; 0x2b2 <__fp_nan>
 35c:	11 24       	eor	r1, r1
 35e:	ee cf       	rjmp	.-36     	; 0x33c <__fp_szero>

00000360 <__mulsf3x>:
 360:	ca df       	rcall	.-108    	; 0x2f6 <__fp_split3>
 362:	a0 f3       	brcs	.-24     	; 0x34c <__mulsf3+0x4>

00000364 <__mulsf3_pse>:
 364:	95 9f       	mul	r25, r21
 366:	d1 f3       	breq	.-12     	; 0x35c <__mulsf3+0x14>
 368:	95 0f       	add	r25, r21
 36a:	50 e0       	ldi	r21, 0x00	; 0
 36c:	55 1f       	adc	r21, r21
 36e:	62 9f       	mul	r22, r18
 370:	f0 01       	movw	r30, r0
 372:	72 9f       	mul	r23, r18
 374:	bb 27       	eor	r27, r27
 376:	f0 0d       	add	r31, r0
 378:	b1 1d       	adc	r27, r1
 37a:	63 9f       	mul	r22, r19
 37c:	aa 27       	eor	r26, r26
 37e:	f0 0d       	add	r31, r0
 380:	b1 1d       	adc	r27, r1
 382:	aa 1f       	adc	r26, r26
 384:	64 9f       	mul	r22, r20
 386:	66 27       	eor	r22, r22
 388:	b0 0d       	add	r27, r0
 38a:	a1 1d       	adc	r26, r1
 38c:	66 1f       	adc	r22, r22
 38e:	82 9f       	mul	r24, r18
 390:	22 27       	eor	r18, r18
 392:	b0 0d       	add	r27, r0
 394:	a1 1d       	adc	r26, r1
 396:	62 1f       	adc	r22, r18
 398:	73 9f       	mul	r23, r19
 39a:	b0 0d       	add	r27, r0
 39c:	a1 1d       	adc	r26, r1
 39e:	62 1f       	adc	r22, r18
 3a0:	83 9f       	mul	r24, r19
 3a2:	a0 0d       	add	r26, r0
 3a4:	61 1d       	adc	r22, r1
 3a6:	22 1f       	adc	r18, r18
 3a8:	74 9f       	mul	r23, r20
 3aa:	33 27       	eor	r19, r19
 3ac:	a0 0d       	add	r26, r0
 3ae:	61 1d       	adc	r22, r1
 3b0:	23 1f       	adc	r18, r19
 3b2:	84 9f       	mul	r24, r20
 3b4:	60 0d       	add	r22, r0
 3b6:	21 1d       	adc	r18, r1
 3b8:	82 2f       	mov	r24, r18
 3ba:	76 2f       	mov	r23, r22
 3bc:	6a 2f       	mov	r22, r26
 3be:	11 24       	eor	r1, r1
 3c0:	9f 57       	subi	r25, 0x7F	; 127
 3c2:	50 40       	sbci	r21, 0x00	; 0
 3c4:	8a f0       	brmi	.+34     	; 0x3e8 <__mulsf3_pse+0x84>
 3c6:	e1 f0       	breq	.+56     	; 0x400 <__DATA_REGION_LENGTH__>
 3c8:	88 23       	and	r24, r24
 3ca:	4a f0       	brmi	.+18     	; 0x3de <__mulsf3_pse+0x7a>
 3cc:	ee 0f       	add	r30, r30
 3ce:	ff 1f       	adc	r31, r31
 3d0:	bb 1f       	adc	r27, r27
 3d2:	66 1f       	adc	r22, r22
 3d4:	77 1f       	adc	r23, r23
 3d6:	88 1f       	adc	r24, r24
 3d8:	91 50       	subi	r25, 0x01	; 1
 3da:	50 40       	sbci	r21, 0x00	; 0
 3dc:	a9 f7       	brne	.-22     	; 0x3c8 <__mulsf3_pse+0x64>
 3de:	9e 3f       	cpi	r25, 0xFE	; 254
 3e0:	51 05       	cpc	r21, r1
 3e2:	70 f0       	brcs	.+28     	; 0x400 <__DATA_REGION_LENGTH__>
 3e4:	60 cf       	rjmp	.-320    	; 0x2a6 <__fp_inf>
 3e6:	aa cf       	rjmp	.-172    	; 0x33c <__fp_szero>
 3e8:	5f 3f       	cpi	r21, 0xFF	; 255
 3ea:	ec f3       	brlt	.-6      	; 0x3e6 <__mulsf3_pse+0x82>
 3ec:	98 3e       	cpi	r25, 0xE8	; 232
 3ee:	dc f3       	brlt	.-10     	; 0x3e6 <__mulsf3_pse+0x82>
 3f0:	86 95       	lsr	r24
 3f2:	77 95       	ror	r23
 3f4:	67 95       	ror	r22
 3f6:	b7 95       	ror	r27
 3f8:	f7 95       	ror	r31
 3fa:	e7 95       	ror	r30
 3fc:	9f 5f       	subi	r25, 0xFF	; 255
 3fe:	c1 f7       	brne	.-16     	; 0x3f0 <__mulsf3_pse+0x8c>
 400:	fe 2b       	or	r31, r30
 402:	88 0f       	add	r24, r24
 404:	91 1d       	adc	r25, r1
 406:	96 95       	lsr	r25
 408:	87 95       	ror	r24
 40a:	97 f9       	bld	r25, 7
 40c:	08 95       	ret

0000040e <_exit>:
 40e:	f8 94       	cli

00000410 <__stop_program>:
 410:	ff cf       	rjmp	.-2      	; 0x410 <__stop_program>
